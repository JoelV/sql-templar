{"name":"Sql-templar","tagline":"A sql template engine on a crusade","body":"# Sql Templar\r\n\r\nAn alternative crusade to the knights of ORM Land.\r\n\r\nSql-Templar is a small abstraction over node-mysql that provides a similar api to that of rendering html templates, but for sql files.  This gets the sql files out of concatenated strings and allows you to place them in a directory much like you place you jade or ejs templates for html.  Here is some sample usage code:\r\n\r\n# Usage\r\n\r\n/sql/customers.sql\r\n\r\n``` sql\r\nselect * from customers where name like ?\r\n```\r\n\r\n/index.js\r\n\r\n``` javascript\r\nvar st = require('sql-templar')({\r\n  templates: {\r\n    dir: __dirname + '/sql',\r\n    ext: 'sql'\r\n  }, db: {\r\n    host: 'localhost',\r\n    port: 3306,\r\n    database: 'test',\r\n    user: 'root'\r\n  }\r\n});\r\n\r\nst('customers', ['A%'], function(err, rows) {\r\n  if (err) { console.log(err); }\r\n  console.log(rows); \r\n});\r\n```\r\n\r\n``` sh\r\nnode index.js\r\n```\r\n\r\nJust like you use jade or ejs templates with sql-templar you can manage your sql in template files and utilize all of the conventions and sugar provided by node-mysql to perform proper escaping, etc.  See the node-mysql readme for more details on the pattern matching.\r\n\r\n## Install\r\n\r\n```\r\nnpm install sql-templar\r\n```\r\n\r\n## Contributing\r\n\r\nContributions are welcome, the goal of the project is to simply provide a template like engine on top of node-mysql, any contributions that keep within the context of this goal will be merged.\r\n\r\n## LICENSE\r\n\r\nMIT\r\n\r\n## Thanks\r\n\r\nThanks to Felixge and all the node-mysql contributors\r\nThanks to Ryan Dahl, Issacs and all the NodeJS Contributors and Community!\r\n\r\nEnjoy! ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}